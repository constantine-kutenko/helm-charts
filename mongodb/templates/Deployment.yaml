---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  serviceName: mongodb
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodb
          image: "{{ .Values.registry_address }}/{{ .Values.image.name }}:{{ .Chart.AppVersion }}"
          env:
            - name: MONGODB_LISTEN_ADDRESS
              value: "{{ .Values.env.MONGODB_LISTEN_ADDRESS }}"
            - name: MONGODB_LISTEN_PORT
              value: "{{ .Values.env.MONGODB_LISTEN_PORT }}"
            - name: MONGODB_DATA_DIR
              value: "{{ .Values.env.MONGODB_DATA_DIR }}"
          ports:
            - name: mongodb
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: "1024Mi"
            requests:
              cpu: "256m"
              memory: "128Mi"
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
              initialDelaySeconds: 15
              periodSeconds: 60
              timeoutSeconds: 10
              successThreshold: 1
              failureThreshold: 5
          volumeMounts:
            - name: data
              mountPath: /var/lib/mongodb
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mongodb-{{ .Values.environment }}
