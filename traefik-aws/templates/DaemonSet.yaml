---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    name: traefik
  name: traefik
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: traefik
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: traefik
    spec:
      tolerations:
        - effect: NoSchedule
          operator: Exists
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/traefik
                  operator: In
                  values: ["true"]
      hostNetwork: true
      dnsPolicy: ClusterFirst
      dnsConfig:
        nameservers:
          - "{{ .Values.kube_dns.service.ip }}"
        options:
          - name: ndots
            value: "5"
        searches:
          - kube-system.svc.cluster.local
          - svc.cluster.local
          - cluster.local
      serviceAccount: ingress
      serviceAccountName: ingress
      terminationGracePeriodSeconds: 60
      containers:
        - name: traefik
          image: "{{ .Values.registry_address }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          args:
            - "--debug"
            - "--logLevel=DEBUG"
            - "--defaultentrypoints=http,https"
            - "--entryPoints=Name:http Address::80 Compress:true"
            - "--entryPoints=Name:https Address::443 TLS Compress:true"
            - "--entryPoints=Name:api Address::8080 {{ .Values.traefik.args.authBasicUsers }}"
            - "--api"
            - "--api.dashboard"
            - "--api.entrypoint=api"
            - "--api.statistics"
            - "--etcd"
            - "--etcd.endpoint={{ .Values.env.ETCD_SERVERS }}"
            - "--etcd.trace"
            - "--etcd.watch"
            - "--etcd.useapiv3"
            - "--etcd.prefix=/traefik"
            - "--kubernetes"
            - "--kubernetes.watch"
            - "--acme"
            - "--acme.dnschallenge.provider=rfc2136"
            - "--acme.email=support@example.com"
            - "--acme.storage=/traefik/acme/account"
            - "--acme.entrypoint=https"
            - "--acme.acmelogging"
            - "--acme.dnschallenge"
            - "--acme.dnschallenge.delaybeforecheck=3"
            - "--acme.dnschallenge.resolvers={{ .Values.kube_dns.service.ip }}"
            - "--acme.onhostrule"
            - "--loglevel=INFO"
            - "--ping"
            - "--ping.entrypoint=api"
          env:
            - name: RFC2136_TSIG_KEY
              value: "{{ .Values.env.RFC2136_TSIG_KEY }}"
            - name: RFC2136_NAMESERVER
              value: "{{ .Values.env.RFC2136_NAMESERVER }}"
            - name: RFC2136_TSIG_ALGORITHM
              value: "{{ .Values.env.RFC2136_TSIG_ALGORITHM }}"
            - name: RFC2136_TSIG_SECRET
              value: "{{ .Values.env.RFC2136_TSIG_SECRET }}"
          ports:
            - name: http
              containerPort: 80
              hostPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              hostPort: 443
              protocol: TCP
            - name: api
              containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 100Mi
          livenessProbe:
            httpGet:
              path: /ping
              port: api
              scheme: HTTP
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3